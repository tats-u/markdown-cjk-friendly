// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`remark-cjk-friendly > ** around Kana/Han is converted to <strong> (MDX) 1`] = `
"import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
function _createMdxContent(props) {
  const _components = {
    a: "a",
    p: "p",
    strong: "strong",
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsxs(_components.p, {
      children: ["これは", _jsx(_components.strong, {
        children: "私のやりたかったこと。"
      }), "だからするの。"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: _jsx(_components.a, {
          href: "./product-foo",
          children: "製品ほげ"
        })
      }), "と", _jsx(_components.strong, {
        children: _jsx(_components.a, {
          href: "./product-bar",
          children: "製品ふが"
        })
      }), "をお試しください"]
    }), "\\n", _jsxs(_components.p, {
      children: ["単語と", _jsx(_components.strong, {
        children: _jsx(_components.a, {
          href: "word-and",
          children: "単語と"
        })
      }), "単語"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "これは太字になりません。"
      }), "ご注意ください。"]
    }), "\\n", _jsxs(_components.p, {
      children: ["カッコに注意", _jsx(_components.strong, {
        children: "（太字にならない）"
      }), "文が続く場合に要警戒。"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: _jsx(_components.a, {
          href: "https://example.com",
          children: "リンク"
        })
      }), "も注意。（画像も同様）"]
    }), "\\n", _jsxs(_components.p, {
      children: ["先頭の", _jsx(_components.strong, {
        children: "\`コード\`も注意。"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "末尾の\`コード\`"
      }), "も注意。"]
    }), "\\n", _jsxs(_components.p, {
      children: ["税込", _jsx(_components.strong, {
        children: "¥10,000"
      }), "で入手できます。"]
    }), "\\n", _jsxs(_components.p, {
      children: ["正解は", _jsx(_components.strong, {
        children: "④"
      }), "です。"]
    }), "\\n", _jsxs(_components.p, {
      children: ["太郎は", _jsx(_components.strong, {
        children: "「こんにちわ」"
      }), "といった"]
    }), "\\n", _jsxs(_components.p, {
      children: ["太郎は", _jsx(_components.strong, {
        children: "\\"こんにちわ\\""
      }), "といった"]
    }), "\\n", _jsxs(_components.p, {
      children: ["太郎は", _jsx(_components.strong, {
        children: "こんにちわ"
      }), "といった"]
    }), "\\n", _jsxs(_components.p, {
      children: ["太郎は", _jsx(_components.strong, {
        children: "「Hello」"
      }), "といった"]
    }), "\\n", _jsxs(_components.p, {
      children: ["太郎は", _jsx(_components.strong, {
        children: "\\"Hello\\""
      }), "といった"]
    }), "\\n", _jsxs(_components.p, {
      children: ["太郎は", _jsx(_components.strong, {
        children: "Hello"
      }), "といった"]
    }), "\\n", _jsxs(_components.p, {
      children: ["太郎は", _jsx(_components.strong, {
        children: "「Oh my god」"
      }), "といった"]
    }), "\\n", _jsxs(_components.p, {
      children: ["太郎は", _jsx(_components.strong, {
        children: "\\"Oh my god\\""
      }), "といった"]
    }), "\\n", _jsxs(_components.p, {
      children: ["太郎は", _jsx(_components.strong, {
        children: "Oh my god"
      }), "といった"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "C#"
      }), "や", _jsx(_components.strong, {
        children: "F#"
      }), "は", _jsx(_components.strong, {
        children: "「.NET」"
      }), "というプラットフォーム上で動作します。"]
    }), "\\n", _jsxs(_components.p, {
      children: ["IDが", _jsx(_components.strong, {
        children: "001号"
      }), "になります。"]
    }), "\\n", _jsxs(_components.p, {
      children: ["IDが", _jsx(_components.strong, {
        children: "００１号"
      }), "になります。"]
    }), "\\n", _jsxs(_components.p, {
      children: ["Go", _jsx(_components.strong, {
        children: "「初心者」"
      }), "を対象とした記事です。"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: _jsx(_components.a, {
          href: "https://example.com",
          children: "リンク"
        })
      }), "も注意。"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "⻲田太郎"
      }), "と申します"]
    }), "\\n", _jsxs(_components.p, {
      children: ["・", _jsx(_components.strong, {
        children: "㋐"
      }), ":選択肢１つ目"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真，"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真。"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真、"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真；"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真："
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真？"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真！"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真“"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真”"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真‘"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真’"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真（"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: ["真", _jsx(_components.strong, {
        children: "（她"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真）"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真【"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: ["真", _jsx(_components.strong, {
        children: "【她"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真】"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真《"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: ["真", _jsx(_components.strong, {
        children: "《她"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真》"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真—"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真～"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真…"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真·"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真〃"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真-"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真々"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真"
      }), "她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真，"
      }), " 她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真"
      }), "，她"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "真，"
      }), "​她"]
    }), "\\n", _jsxs(_components.p, {
      children: ["私は", _jsx(_components.strong, {
        children: "⻲田太郎"
      }), "と申します"]
    }), "\\n", _jsxs(_components.p, {
      children: ["選択肢", _jsx(_components.strong, {
        children: "㋐"
      }), ": 1つ目の選択肢"]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "さようなら︙"
      }), "と太郎はいった。"]
    }), "\\n", _jsxs(_components.p, {
      children: [".NET", _jsx(_components.strong, {
        children: "（.NET Frameworkは不可）"
      }), "では、"]
    }), "\\n", _jsxs(_components.p, {
      children: ["「禰󠄀」の偏は示ではなく", _jsx(_components.strong, {
        children: "礻"
      }), "です。"]
    }), "\\n", _jsxs(_components.p, {
      children: ["Git", _jsx(_components.strong, {
        children: "（注：不是GitHub）"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["太郎は", _jsx(_components.strong, {
        children: "「こんにちわ」"
      }), "といった。"]
    }), "\\n", _jsxs(_components.p, {
      children: ["𰻞𰻞", _jsx(_components.strong, {
        children: "（ビャンビャン）"
      }), "麺"]
    }), "\\n", _jsxs(_components.p, {
      children: ["𰻞𰻞", _jsx(_components.strong, {
        children: "(ビャンビャン)"
      }), "麺"]
    }), "\\n", _jsxs(_components.p, {
      children: ["ハイパーテキストコーヒーポット制御プロトコル", _jsx(_components.strong, {
        children: "(HTCPCP)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["﨑", _jsx(_components.strong, {
        children: "(崎)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["国際規格", _jsx(_components.strong, {
        children: _jsx(_components.a, {
          href: "https://tc39.es/ecma262/",
          children: "ECMA-262"
        })
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["㐧", _jsx(_components.strong, {
        children: "(第の俗字)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["𠮟", _jsx(_components.strong, {
        children: "(こちらが正式表記)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["𪜈", _jsx(_components.strong, {
        children: "(トモの合略仮名)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["𫠉", _jsx(_components.strong, {
        children: "(馬の俗字)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["谺𬤲", _jsx(_components.strong, {
        children: "(こだま)"
      }), "石神社"]
    }), "\\n", _jsxs(_components.p, {
      children: ["石𮧟", _jsx(_components.strong, {
        children: "(いしただら)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "推荐几个框架："
      }), "React、Vue等前端框架。"]
    }), "\\n", _jsxs(_components.p, {
      children: ["葛󠄀", _jsx(_components.strong, {
        children: "(こちらが正式表記)"
      }), "城市"]
    }), "\\n", _jsxs(_components.p, {
      children: ["禰󠄀", _jsx(_components.strong, {
        children: "(こちらが正式表記)"
      }), "豆子"]
    }), "\\n", _jsxs(_components.p, {
      children: ["𱟛", _jsx(_components.strong, {
        children: "(U+317DB)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["阿寒湖アイヌシアターイコㇿ", _jsx(_components.strong, {
        children: "(Akanko Ainu Theater Ikor)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["あ𛀙", _jsx(_components.strong, {
        children: "(か)"
      }), "よろし"]
    }), "\\n", _jsxs(_components.p, {
      children: ["𮹝", _jsx(_components.strong, {
        children: "(simplified form of 龘 in China)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["大塚︀", _jsx(_components.strong, {
        children: "(U+585A U+FE00)"
      }), " 大塚", _jsx(_components.strong, {
        children: "(U+FA10)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["〽︎", _jsx(_components.strong, {
        children: "(庵点)"
      }), "は、"]
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;

exports[`remark-cjk-friendly > ** around Kana/Han is converted to <strong> 1`] = `
"<p>これは<strong>私のやりたかったこと。</strong>だからするの。</p>
<p><strong><a href="./product-foo">製品ほげ</a></strong>と<strong><a href="./product-bar">製品ふが</a></strong>をお試しください</p>
<p>単語と<strong><a href="word-and">単語と</a></strong>単語</p>
<p><strong>これは太字になりません。</strong>ご注意ください。</p>
<p>カッコに注意<strong>（太字にならない）</strong>文が続く場合に要警戒。</p>
<p><strong><a href="https://example.com">リンク</a></strong>も注意。（画像も同様）</p>
<p>先頭の<strong>\`コード\`も注意。</strong></p>
<p><strong>末尾の\`コード\`</strong>も注意。</p>
<p>税込<strong>¥10,000</strong>で入手できます。</p>
<p>正解は<strong>④</strong>です。</p>
<p>太郎は<strong>「こんにちわ」</strong>といった</p>
<p>太郎は<strong>"こんにちわ"</strong>といった</p>
<p>太郎は<strong>こんにちわ</strong>といった</p>
<p>太郎は<strong>「Hello」</strong>といった</p>
<p>太郎は<strong>"Hello"</strong>といった</p>
<p>太郎は<strong>Hello</strong>といった</p>
<p>太郎は<strong>「Oh my god」</strong>といった</p>
<p>太郎は<strong>"Oh my god"</strong>といった</p>
<p>太郎は<strong>Oh my god</strong>といった</p>
<p><strong>C#</strong>や<strong>F#</strong>は<strong>「.NET」</strong>というプラットフォーム上で動作します。</p>
<p>IDが<strong>001号</strong>になります。</p>
<p>IDが<strong>００１号</strong>になります。</p>
<p>Go<strong>「初心者」</strong>を対象とした記事です。</p>
<p><strong><a href="https://example.com">リンク</a></strong>も注意。</p>
<p><strong>⻲田太郎</strong>と申します</p>
<p>・<strong>㋐</strong>:選択肢１つ目</p>
<p><strong>真，</strong>她</p>
<p><strong>真。</strong>她</p>
<p><strong>真、</strong>她</p>
<p><strong>真；</strong>她</p>
<p><strong>真：</strong>她</p>
<p><strong>真？</strong>她</p>
<p><strong>真！</strong>她</p>
<p><strong>真“</strong>她</p>
<p><strong>真”</strong>她</p>
<p><strong>真‘</strong>她</p>
<p><strong>真’</strong>她</p>
<p><strong>真（</strong>她</p>
<p>真<strong>（她</strong></p>
<p><strong>真）</strong>她</p>
<p><strong>真【</strong>她</p>
<p>真<strong>【她</strong></p>
<p><strong>真】</strong>她</p>
<p><strong>真《</strong>她</p>
<p>真<strong>《她</strong></p>
<p><strong>真》</strong>她</p>
<p><strong>真—</strong>她</p>
<p><strong>真～</strong>她</p>
<p><strong>真…</strong>她</p>
<p><strong>真·</strong>她</p>
<p><strong>真〃</strong>她</p>
<p><strong>真-</strong>她</p>
<p><strong>真々</strong>她</p>
<p><strong>真</strong>她</p>
<p><strong>真，</strong> 她</p>
<p><strong>真</strong>，她</p>
<p><strong>真，</strong>​她</p>
<p>私は<strong>⻲田太郎</strong>と申します</p>
<p>選択肢<strong>㋐</strong>: 1つ目の選択肢</p>
<p><strong>さようなら︙</strong>と太郎はいった。</p>
<p>.NET<strong>（.NET Frameworkは不可）</strong>では、</p>
<p>「禰󠄀」の偏は示ではなく<strong>礻</strong>です。</p>
<p>Git<strong>（注：不是GitHub）</strong></p>
<p>太郎は<strong>「こんにちわ」</strong>といった。</p>
<p>𰻞𰻞<strong>（ビャンビャン）</strong>麺</p>
<p>𰻞𰻞<strong>(ビャンビャン)</strong>麺</p>
<p>ハイパーテキストコーヒーポット制御プロトコル<strong>(HTCPCP)</strong></p>
<p>﨑<strong>(崎)</strong></p>
<p>国際規格<strong><a href="https://tc39.es/ecma262/">ECMA-262</a></strong></p>
<p>㐧<strong>(第の俗字)</strong></p>
<p>𠮟<strong>(こちらが正式表記)</strong></p>
<p>𪜈<strong>(トモの合略仮名)</strong></p>
<p>𫠉<strong>(馬の俗字)</strong></p>
<p>谺𬤲<strong>(こだま)</strong>石神社</p>
<p>石𮧟<strong>(いしただら)</strong></p>
<p><strong>推荐几个框架：</strong>React、Vue等前端框架。</p>
<p>葛󠄀<strong>(こちらが正式表記)</strong>城市</p>
<p>禰󠄀<strong>(こちらが正式表記)</strong>豆子</p>
<p>𱟛<strong>(U+317DB)</strong></p>
<p>阿寒湖アイヌシアターイコㇿ<strong>(Akanko Ainu Theater Ikor)</strong></p>
<p>あ𛀙<strong>(か)</strong>よろし</p>
<p>𮹝<strong>(simplified form of 龘 in China)</strong></p>
<p>大塚︀<strong>(U+585A U+FE00)</strong> 大塚<strong>(U+FA10)</strong></p>
<p>〽︎<strong>(庵点)</strong>は、</p>"
`;

exports[`remark-cjk-friendly > ** around Korean is converted to <strong> (MDX) 1`] = `
"import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
function _createMdxContent(props) {
  const _components = {
    a: "a",
    code: "code",
    p: "p",
    strong: "strong",
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsxs(_components.p, {
      children: [_jsxs(_components.strong, {
        children: ["이 ", _jsx(_components.a, {
          href: "https://example.kr/",
          children: "링크"
        })]
      }), "만을 강조하고 싶다."]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "스크립트(script)"
      }), "라고"]
    }), "\\n", _jsxs(_components.p, {
      children: ["패키지를 발행하려면 ", _jsx(_components.strong, {
        children: _jsx(_components.code, {
          children: "npm publish"
        })
      }), "를 실행하십시오."]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "안녕(hello)"
      }), "하세요."]
    }), "\\n", _jsxs(_components.p, {
      children: ["ᅡ", _jsx(_components.strong, {
        children: "(a)"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "(k)"
      }), "ᄏ"]
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;

exports[`remark-cjk-friendly > ** around Korean is converted to <strong> 1`] = `
"<p><strong>이 <a href="https://example.kr/">링크</a></strong>만을 강조하고 싶다.</p>
<p><strong>스크립트(script)</strong>라고</p>
<p>패키지를 발행하려면 <strong><code>npm publish</code></strong>를 실행하십시오.</p>
<p><strong>안녕(hello)</strong>하세요.</p>
<p>ᅡ<strong>(a)</strong></p>
<p><strong>(k)</strong>ᄏ</p>"
`;

exports[`remark-cjk-friendly > ** around pseudo-emoji (CJK symbols that are also unqualified-emoji) is converted to <strong> (MDX) 1`] = `
"import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
function _createMdxContent(props) {
  const _components = {
    p: "p",
    strong: "strong",
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsxs(_components.p, {
      children: ["a", _jsx(_components.strong, {
        children: "〰"
      }), "a"]
    }), "\\n", _jsxs(_components.p, {
      children: ["a", _jsx(_components.strong, {
        children: "〽"
      }), "a"]
    }), "\\n", _jsxs(_components.p, {
      children: ["a", _jsx(_components.strong, {
        children: "🈂"
      }), "a"]
    }), "\\n", _jsxs(_components.p, {
      children: ["a", _jsx(_components.strong, {
        children: "🈷"
      }), "a"]
    }), "\\n", _jsxs(_components.p, {
      children: ["a", _jsx(_components.strong, {
        children: "㊗"
      }), "a"]
    }), "\\n", _jsxs(_components.p, {
      children: ["a", _jsx(_components.strong, {
        children: "㊙"
      }), "a"]
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;

exports[`remark-cjk-friendly > ** around pseudo-emoji (CJK symbols that are also unqualified-emoji) is converted to <strong> 1`] = `
"<p>a<strong>〰</strong>a</p>
<p>a<strong>〽</strong>a</p>
<p>a<strong>🈂</strong>a</p>
<p>a<strong>🈷</strong>a</p>
<p>a<strong>㊗</strong>a</p>
<p>a<strong>㊙</strong>a</p>"
`;

exports[`remark-cjk-friendly > Compatible with remark-gfm (1) 1`] = `
"<p>あ<strong>()</strong>あ<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref aria-describedby="footnote-label">1</a></sup></p>
<section data-footnotes class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2>
<ol>
<li id="user-content-fn-1">
<p><del>あ</del> <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">↩</a></p>
</li>
</ol>
</section>"
`;

exports[`remark-cjk-friendly > Compatible with remark-gfm (2) 1`] = `
"<p>あ<strong>()</strong>あ<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref aria-describedby="footnote-label">1</a></sup></p>
<section data-footnotes class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2>
<ol>
<li id="user-content-fn-1">
<p><del>あ</del> <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">↩</a></p>
</li>
</ol>
</section>"
`;

exports[`remark-cjk-friendly > Example Markdown in README 1`] = `
"<p><strong>このアスタリスクは強調記号として認識されず、そのまま表示されます。</strong>この文のせいで。</p>
<p><strong>该星号不会被识别，而是直接显示。</strong>这是因为它没有被识别为强调符号。</p>
<p><strong>이 별표는 강조 표시로 인식되지 않고 그대로 표시됩니다(이 괄호 때문에)</strong>이 문장 때문에.</p>"
`;

exports[`remark-cjk-friendly > process underscores around CJK punctuation (MDX) 1`] = `
"import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
function _createMdxContent(props) {
  const _components = {
    em: "em",
    p: "p",
    strong: "strong",
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsxs(_components.p, {
      children: [_jsx(_components.strong, {
        children: "注意"
      }), "：注意事項"]
    }), "\\n", _jsxs(_components.p, {
      children: ["注意：", _jsx(_components.strong, {
        children: "注意事項"
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["正體字。︁", _jsx(_components.em, {
        children: "Traditional."
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["正體字。︁", _jsx(_components.strong, {
        children: "Hong Kong and Taiwan."
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["简体字 / 新字体。︀", _jsx(_components.em, {
        children: "Simplified."
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["简体字 / 新字体。︀", _jsx(_components.strong, {
        children: "Mainland China or Japan."
      })]
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;

exports[`remark-cjk-friendly > process underscores around CJK punctuation 1`] = `
"<p><strong>注意</strong>：注意事項</p>
<p>注意：<strong>注意事項</strong></p>
<p>正體字。︁<em>Traditional.</em></p>
<p>正體字。︁<strong>Hong Kong and Taiwan.</strong></p>
<p>简体字 / 新字体。︀<em>Simplified.</em></p>
<p>简体字 / 新字体。︀<strong>Mainland China or Japan.</strong></p>"
`;

exports[`remark-cjk-friendly > recognizes non-BMP punctuation and symbols (MDX) 1`] = `
"import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
function _createMdxContent(props) {
  const _components = {
    p: "p",
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsx(_components.p, {
      children: "a**a«**a"
    }), "\\n", _jsx(_components.p, {
      children: "a**»a**a"
    }), "\\n", _jsx(_components.p, {
      children: "a**a∇**a"
    }), "\\n", _jsx(_components.p, {
      children: "a**∇a**a"
    }), "\\n", _jsx(_components.p, {
      children: "a**a𝜵**a"
    }), "\\n", _jsx(_components.p, {
      children: "a**𝜵a**a"
    }), "\\n", _jsx(_components.p, {
      children: "a**𐬻a**a"
    }), "\\n", _jsx(_components.p, {
      children: "a**a𐬻**a"
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;

exports[`remark-cjk-friendly > recognizes non-BMP punctuation and symbols 1`] = `
"<p>a**a«**a</p>
<p>a**»a**a</p>
<p>a**a∇**a</p>
<p>a**∇a**a</p>
<p>a**a𝜵**a</p>
<p>a**𝜵a**a</p>
<p>a**𐬻a**a</p>
<p>a**a𐬻**a</p>"
`;
